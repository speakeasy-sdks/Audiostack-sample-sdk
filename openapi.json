{
    "openapi": "3.0.1",
    "info": {
        "title": "AudioStack",
        "version": "v1",
        "description": "AudioStack - the global backbone of audio production. Infrastructure for AI driven synthetic audio creation. Easily integrate audio into your product or allow end users to create high quality audio. \n",
        "termsOfService": "https://www.aflorithmic.ai/terms-of-use",
        "contact": {
            "name": "Tech Lead of AudioStack",
            "email": "sam@aflorithmic.ai"
        }
    },
    "servers": [
        {
            "url": "https://v2.api.audio",
            "description": "Main production server"
        }
    ],
    "paths": {
        "/content/script": {
            "description": "\n## Product Description\n\nSimply put, a script is the format that makes creating and audio with audiostacks, accessible, scalable and awesome. In summary a script contains a series of commands for producing beautifully rendered text-to-speech, that can later be mixed with custom media files and dynamically adjustable sound templates. In the most basic example, a script with the text ``hello world`` will permit our speech services #here to render a syntehtic rendition of the words ``hello world``.\n\nTo annotate a script we have a collection of *markup* syntax used to signify sections, sound effects, dictionary flags and more. All of our tags are prefixed with `as:` syntax (short for audiostack).\n\n### Sections\nAll scripts should start and end with a `<as:section>`\n\n```html\n<as:section name=\"hello\">\n    Hello world, this section is named hello. \n</as:section>\n```\n\n\nScripts not created without a section tag will have one generated automatically. A script can contain many sections, but sections cannot be nested. See `as:sub` for adding sub-sections.\n\n\nTo combine a speech file with a sound design, apply the `soundsegment` attribute to the `as:section` tag.\n\n```html\n<as:section name=\"intro\" soundsegment=\"intro\">\n    This is the first section and will be combined with the intro music.\n</as:section>\n\n<as:section name=\"main\" soundsegment=\"main\">\n    This is the second section and will be combined with the main music. The section name and soundsegment don't have to have the same name.\n</as:section>\n```\n\n### Sub-sections\nTo insert sub-sections you need to use the `<as:sub>` tag. By default all sub-sections will be rendered with the same voice, but this can be configured in the speech call. However all the tts content with the section will be combined with the supplied sound segment. Sub-sections cannot be nested.\n\n```html\n<as:section name=\"intro\" soundsegment=\"intro\">\n    <as:sub name=\"introa\"> This is sub-section 1 </as:sub>\n    <as:sub name=\"introb\"> This is sub-section 2 </as:sub>\n</as:section>\n```\n\n### Media and FX\n\nTo create awesome audio content you can also insert sound effects and media files. Conceptually these work the same, fx are sound effects that we have curated for you, and media files can be user-uploaded. The tags for these are very similar.\n\n```html\n<as:section name=\"intro\" soundsegment=\"intro\">\n    Hello and welcome to my awesome audio advert \n    <as:fx name=\"bang\" id=\"fx1\"/>\n    I have also uploaded my companies sound branding which will now play.\n    <as:media name=\"branding1\" id=\"branding\"/>\n</as:section>\n```\n\nUse the `name` if you wish to use a named asset. Use the `id` tag if you wish to swap the content in a future mastering request without recreating the script. Note that either `name` or `id` must be supplied.\n\n### Placeholders\n\nTo produce variants of a single script you can use the `as:placeholder` tag to insert content during a speech creation call. \n\n```html\n<as:section name=\"intro\" soundsegment=\"intro\"> \n    hello enjoy a coffee with <as:placeholder id=\"username\">name</as:placeholder>\n</as:section>\n```\n\nThe content between the placeholder tag is the default content that will be used, the `id` parameter is used to replace this content during the speech call. For example, setting username=\"sam\".\n\nFor reference these are all the audiostack specific ssml tags.\n```html\n    <as:section name=\"main\" soundSegment=\"main\"> hello </as:section>\n    <as:sub name=\"main\"> hello </as:sub>\n    <as:fx name=\"riser\" id=\"fx1\" /> \n    <as:media name=\"soundbranding.wav\" id=\"media1\" />\n    <as:placeholder id=\"username\"> fallback </as:placeholder> \n    <as:preserve> This text will not be corrected by voice intelligence service </as:preserve>\n```\n\n### SSML\nSSML stands for Speech Synthesis Markup Language, and many TTS providors supply a collection of these tags for customising the sonice rendering of TTS voices, for example, changing prosidy, speaking speed, or inserting pauses between words. The syntax is ``<SSMLTagName parameters> ``, for a comprehensive list of SSML tags see this helpful guide.\n\n",
            "post": {
                "tags": [
                    "Script"
                ],
                "operationId": "postScript",
                "summary": "Create a Script resource.",
                "description": "\nCreates a new script resource. Scripts are organised by directories, of which there are 3, projectName, moduleName, scriptName. Within this structure an indivdual script has a scriptId that is unique. It is possible to have multiple scripts under a given ``projectName/moduleName/scriptName`` structure. Therefore repeated calls to this endpoint will create multiple scripts. Use script update (PUT) to update an existing script (with its unique scriptId)\n\nA script's default version is v0. You can create multiple versions of one scriptId, which is handy in cases of multilingual coverage, targeted content etc. To create another version of a script use the PUT method.\n\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "scriptText"
                                ],
                                "properties": {
                                    "projectName": {
                                        "type": "string"
                                    },
                                    "moduleName": {
                                        "type": "string"
                                    },
                                    "scriptName": {
                                        "type": "string"
                                    },
                                    "scriptText": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Script created/updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "projectName": {
                                                    "type": "string"
                                                },
                                                "moduleName": {
                                                    "type": "string"
                                                },
                                                "scriptName": {
                                                    "type": "string"
                                                },
                                                "scriptId": {
                                                    "type": "string"
                                                },
                                                "scriptText": {
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "string"
                                                },
                                                "creationDate": {
                                                    "type": "string"
                                                },
                                                "lang": {
                                                    "type": "string"
                                                },
                                                "sections": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "soundSegment": {
                                                                "type": "string"
                                                            },
                                                            "contentType": {
                                                                "type": "string"
                                                            },
                                                            "content": {
                                                                "type": "string"
                                                            },
                                                            "placeholders": {
                                                                "type": "object",
                                                                "properties": {}
                                                            },
                                                            "parent": {
                                                                "type": "string"
                                                            },
                                                            "subSections": {
                                                                "type": "array"
                                                            },
                                                            "uuid": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "number"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {
                                            "projectName": "untitled",
                                            "moduleName": "untitled",
                                            "scriptName": "untitled",
                                            "scriptId": "2609463f-9614-48e6-b0cc-31d4f44d7e72",
                                            "scriptText": "<as:section name=\"intro\" soundsegment=\"intro\">         hello this is the new script syntax     </as:section>    <as:section name=\"main\" soundsegment=\"main\">         This uses regular H T M L syntax and replaces our old script formatting     </as:section>    <as:section name=\"outro\" soundsegment=\"outro\">         This massively improves usability, aids with learnability and should improve adoption     </as:section>",
                                            "metadata": "{}",
                                            "creationDate": "2023-10-24T08:51:07.533516",
                                            "lang": "en",
                                            "sections": [
                                                {
                                                    "name": "intro",
                                                    "soundSegment": "intro",
                                                    "contentType": "tts",
                                                    "content": "hello this is the new script syntax",
                                                    "placeholders": {},
                                                    "parent": "",
                                                    "subSections": [],
                                                    "uuid": "dbca95a7-62f2-4aee-87a0-3ebd62abedf4"
                                                },
                                                {
                                                    "name": "main",
                                                    "soundSegment": "main",
                                                    "contentType": "tts",
                                                    "content": "This uses regular H T M L syntax and replaces our old script formatting",
                                                    "placeholders": {},
                                                    "parent": "",
                                                    "subSections": [],
                                                    "uuid": "d210c15f-7509-4cdc-a45c-f16ce6dc1db5"
                                                },
                                                {
                                                    "name": "outro",
                                                    "soundSegment": "outro",
                                                    "contentType": "tts",
                                                    "content": "This massively improves usability, aids with learnability and should improve adoption",
                                                    "placeholders": {},
                                                    "parent": "",
                                                    "subSections": [],
                                                    "uuid": "b88242cb-519f-4712-a930-b5ed4eba4412"
                                                }
                                            ]
                                        },
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0.0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Script created",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Script could not be created, see errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "number"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "Missing body object"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0.0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to create script",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Access denied. Could not find a valid organization."
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Script"
                ],
                "operationId": "putScript",
                "summary": "Updates a Script resource.",
                "description": "\nUpdates an existing script resource. Additional versions can be appended to a given scriptId. To do this supply the version field with a named version. For example, `en` or `es`. By default `v0` is reserved and represents the fist version created when the original script was created with a (POST) request.\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "scriptId",
                                    "scriptText"
                                ],
                                "properties": {
                                    "scriptId": {
                                        "type": "string",
                                        "description": "The scriptId of the resource to be updated."
                                    },
                                    "scriptText": {
                                        "type": "string",
                                        "description": "Script text to replace, or add to new version"
                                    },
                                    "version": {
                                        "type": "string",
                                        "description": "By default this will update v0, however you can set this field to update/create an additional version of this scriptId"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Script created/updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "metadata": {
                                                    "type": "string"
                                                },
                                                "version": {
                                                    "type": "string"
                                                },
                                                "scriptName": {
                                                    "type": "string"
                                                },
                                                "creationDate": {
                                                    "type": "string"
                                                },
                                                "projectName": {
                                                    "type": "string"
                                                },
                                                "sections": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "soundSegment": {
                                                                "type": "string"
                                                            },
                                                            "contentType": {
                                                                "type": "string"
                                                            },
                                                            "content": {
                                                                "type": "string"
                                                            },
                                                            "placeholders": {
                                                                "type": "object",
                                                                "properties": {}
                                                            },
                                                            "parent": {
                                                                "type": "string"
                                                            },
                                                            "subSections": {
                                                                "type": "array"
                                                            },
                                                            "uuid": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                },
                                                "availableVersions": {
                                                    "type": "array"
                                                },
                                                "scriptText": {
                                                    "type": "string"
                                                },
                                                "lang": {
                                                    "type": "string"
                                                },
                                                "orgId": {
                                                    "type": "string"
                                                },
                                                "moduleName": {
                                                    "type": "string"
                                                },
                                                "scriptId": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {
                                            "metadata": "{}",
                                            "version": "v0",
                                            "scriptName": "untitled",
                                            "creationDate": "2023-10-24T08:51:07.533516",
                                            "projectName": "untitled",
                                            "sections": [
                                                {
                                                    "name": "intro",
                                                    "soundSegment": "intro",
                                                    "contentType": "tts",
                                                    "content": "hello this is the new script syntax",
                                                    "placeholders": {},
                                                    "parent": "",
                                                    "subSections": [],
                                                    "uuid": "2b9fc16d-7705-4e97-a29c-f83dfa0c3e01"
                                                },
                                                {
                                                    "name": "main",
                                                    "soundSegment": "main",
                                                    "contentType": "tts",
                                                    "content": "This uses regular H T M L syntax and replaces our old script formatting",
                                                    "placeholders": {},
                                                    "parent": "",
                                                    "subSections": [],
                                                    "uuid": "f767e9a6-f578-4391-aab5-432144585269"
                                                },
                                                {
                                                    "name": "outro",
                                                    "soundSegment": "outro",
                                                    "contentType": "tts",
                                                    "content": "This massively improves usability, aids with learnability and should improve adoption",
                                                    "placeholders": {},
                                                    "parent": "",
                                                    "subSections": [],
                                                    "uuid": "883092c9-667d-4772-923d-b0e2b2915143"
                                                }
                                            ],
                                            "availableVersions": [],
                                            "scriptText": "<as:section name=\"intro\" soundsegment=\"intro\">         hello this is the new script syntax     </as:section>    <as:section name=\"main\" soundsegment=\"main\">         This uses regular H T M L syntax and replaces our old script formatting     </as:section>    <as:section name=\"outro\" soundsegment=\"outro\">         This massively improves usability, aids with learnability and should improve adoption     </as:section>",
                                            "lang": "en",
                                            "orgId": "******************",
                                            "moduleName": "untitled",
                                            "scriptId": "006036f6-897e-4833-a035-2972135befcc"
                                        },
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Script updated",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ScriptId not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "ScriptId not supplied"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to update script",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Script could not be updated, see errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "Missing body object"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to update script",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Access denied. Could not find a valid organization."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/content/scripts": {
            "description": "\n## Script Management Description\n\nScripts should be organised into a `projectName/moduleName/scriptName` structure. There are then two methods that are useful for managing content within this structure. These are `/scripts (GET)`, `/scripts (DELETE)`, both of these methods use the same query parameters that allow scripts to either be listed or deleted by given structure. For example, you could list all scripts within a given project, or delete all scripts within a given project and module structure.\n",
            "get": {
                "tags": [
                    "Script"
                ],
                "operationId": "listScripts",
                "summary": "Lists multiple script resources.",
                "description": "\nA maximum of 1000 scripts can be returned in a single GET request, a `paginationToken` will be returned that can be passed to the same method again to list the next 1000 scripts.\n\nTo condense the output JSON, you can supply `verbose=False`, which will remove all of the non-essential details. Leaving only the script directory structure and ID in the response.\n",
                "parameters": [
                    {
                        "in": "query",
                        "name": "projectName",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "moduleName",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scriptName",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scriptId",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "paginationToken",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "verbose",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Script created/updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "scripts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "metadata": {
                                                                "type": "string"
                                                            },
                                                            "scriptName": {
                                                                "type": "string"
                                                            },
                                                            "creationDate": {
                                                                "type": "string"
                                                            },
                                                            "projectName": {
                                                                "type": "string"
                                                            },
                                                            "sections": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "parent": {
                                                                            "type": "string"
                                                                        },
                                                                        "subSections": {
                                                                            "type": "array"
                                                                        },
                                                                        "soundSegment": {
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "placeholders": {
                                                                            "type": "object",
                                                                            "properties": {}
                                                                        },
                                                                        "contentType": {
                                                                            "type": "string"
                                                                        },
                                                                        "uuid": {
                                                                            "type": "string"
                                                                        },
                                                                        "content": {
                                                                            "type": "string"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "scriptText": {
                                                                "type": "string"
                                                            },
                                                            "lang": {
                                                                "type": "string"
                                                            },
                                                            "moduleName": {
                                                                "type": "string"
                                                            },
                                                            "scriptId": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                },
                                                "paginationToken": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Query parameters not configured",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "ProjectName needs to be supplied to filter by moduleName."
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to list scripts",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Missing authentication token. There might be no such route or method."
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Script"
                ],
                "operationId": "deleteScripts",
                "summary": "Deletes multiple script resources.",
                "description": "\ntodo\n",
                "parameters": [
                    {
                        "in": "query",
                        "name": "projectName",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "moduleName",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scriptName",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Scripts deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "deleted": {
                                                    "type": "array"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {
                                            "deleted": []
                                        },
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Deleted the following scriptIds: ",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Cannot delete scripts for these query parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "To delete multiple script(s) project name must be supplied"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to delete multiple scripts",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Missing authentication token. There might be no such route or method."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/content/script/{scriptId}": {
            "get": {
                "tags": [
                    "Script"
                ],
                "operationId": "getScriptId",
                "summary": "Get a single script.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "scriptId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "preview",
                        "required": false,
                        "description": "Preview the effect of applying various text correction processes, normalisation and dictionary.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "voice",
                        "required": false,
                        "description": "Which TTS voice should be used to generate the preview, note that this required as different voices require different text correction processes.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Script returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "metadata": {
                                                    "type": "object",
                                                    "properties": {}
                                                },
                                                "scriptName": {
                                                    "type": "string"
                                                },
                                                "creationDate": {
                                                    "type": "string"
                                                },
                                                "projectName": {
                                                    "type": "string"
                                                },
                                                "sections": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "parent": {
                                                                "type": "string"
                                                            },
                                                            "subSections": {
                                                                "type": "array"
                                                            },
                                                            "soundSegment": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "placeholders": {
                                                                "type": "object",
                                                                "properties": {}
                                                            },
                                                            "contentType": {
                                                                "type": "string"
                                                            },
                                                            "uuid": {
                                                                "type": "string"
                                                            },
                                                            "content": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                },
                                                "scriptText": {
                                                    "type": "string"
                                                },
                                                "lang": {
                                                    "type": "string"
                                                },
                                                "moduleName": {
                                                    "type": "string"
                                                },
                                                "scriptId": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {
                                            "metadata": {},
                                            "scriptName": "untitled",
                                            "creationDate": "2023-10-24T08:51:07.533516",
                                            "projectName": "untitled",
                                            "sections": [
                                                {
                                                    "parent": "",
                                                    "subSections": [],
                                                    "soundSegment": "",
                                                    "name": "default",
                                                    "placeholders": {},
                                                    "contentType": "tts",
                                                    "uuid": "14e5c7fd-32fd-498b-b06f-bbb1d915a79e",
                                                    "content": "hello"
                                                }
                                            ],
                                            "scriptText": "<as:section name=\"default\">hello</as:section>",
                                            "lang": "fi",
                                            "moduleName": "untitled",
                                            "scriptId": "0203d531-4d39-47ba-8354-09f1f2c4bf1f"
                                        },
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Script retrieved.",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ScriptId not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "scriptId not found."
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to retrieve script",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Access denied. Could not find a valid organization."
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Script"
                ],
                "operationId": "deleteScriptId",
                "summary": "Deletes a script and all its versions (if applicable).",
                "parameters": [
                    {
                        "in": "path",
                        "name": "scriptId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Script deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {}
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {},
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Removed scriptId 6b2c00f5-4afa-45a6-80bd-e2d7174b60f4 and version(s): v0",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ScriptId not found - cannot be deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "No script(s) or version(s) exist for scriptId x"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Script not found",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Access denied. Could not find a valid organization."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/content/script/{scriptId}/{version}": {
            "get": {
                "tags": [
                    "Script"
                ],
                "operationId": "getScriptVersion",
                "summary": "Get a single version of a script with a given scriptId.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "scriptId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "preview",
                        "required": false,
                        "description": "Preview the effect of applying various text correction processes, normalisation and dictionary.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "voice",
                        "required": false,
                        "description": "Which TTS voice should be used to generate the preview, note that this required as different voices require different text correction processes.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Script returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "metadata": {
                                                    "type": "object",
                                                    "properties": {}
                                                },
                                                "scriptName": {
                                                    "type": "string"
                                                },
                                                "creationDate": {
                                                    "type": "string"
                                                },
                                                "projectName": {
                                                    "type": "string"
                                                },
                                                "sections": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "parent": {
                                                                "type": "string"
                                                            },
                                                            "subSections": {
                                                                "type": "array"
                                                            },
                                                            "soundSegment": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "placeholders": {
                                                                "type": "object",
                                                                "properties": {}
                                                            },
                                                            "contentType": {
                                                                "type": "string"
                                                            },
                                                            "uuid": {
                                                                "type": "string"
                                                            },
                                                            "content": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                },
                                                "scriptText": {
                                                    "type": "string"
                                                },
                                                "lang": {
                                                    "type": "string"
                                                },
                                                "moduleName": {
                                                    "type": "string"
                                                },
                                                "scriptId": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {
                                            "metadata": {},
                                            "scriptName": "untitled",
                                            "creationDate": "2023-10-24T08:13:59.047804",
                                            "projectName": "untitled",
                                            "sections": [
                                                {
                                                    "parent": "",
                                                    "subSections": [],
                                                    "soundSegment": "",
                                                    "name": "default",
                                                    "placeholders": {},
                                                    "contentType": "tts",
                                                    "uuid": "c6429895-64e5-4a58-8bab-bc91933c621b",
                                                    "content": "hello"
                                                }
                                            ],
                                            "scriptText": "<as:section name=\"default\">hello</as:section>",
                                            "lang": "fi",
                                            "moduleName": "untitled",
                                            "scriptId": "971c7eaf-15c3-47f0-8b73-590019131f9c"
                                        },
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Script retrieved.",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ScriptId not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "scriptId not found."
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to retrieve script",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Access denied. Could not find a valid organization."
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Script"
                ],
                "operationId": "deleteScriptVersion",
                "summary": "Deletes a single version of a script.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "scriptId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Script deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {}
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {},
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Removed scriptId 24b042cf-ac08-4a54-8db4-19da28d6f1c0 and version(s): v0",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ScriptId not found - cannot be deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "No script(s) or version(s) exist for scriptId x"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Script not found",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Access denied. Could not find a valid organization."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/content/list_projects": {
            "get": {
                "tags": [
                    "Script"
                ],
                "operationId": "listScriptProjects",
                "summary": "Lists all projects that have been created.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Projects returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "projects": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Missing authentication token. There might be no such route or method."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/content/list_modules": {
            "get": {
                "tags": [
                    "Script"
                ],
                "operationId": "listScriptModules",
                "summary": "Lists all modules that have been created, and lists in which project they exist.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "projectPrefix",
                        "required": false,
                        "description": "Filter responses by a given projectName",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Projects returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "modules": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Missing authentication token. There might be no such route or method."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/speech/tts": {
            "description": "\n## Product Description\n\nOur Text-to-speech provides harmonious access to more than 8 external TTS providers. Our single interface ensures no matter the provider your script content will be synthesized to the highest quality. We have a number of text inteligence services that you can use to improve and humanise synthetic voices, these are located in the `speech/lexi` endpoints. \n\n",
            "post": {
                "tags": [
                    "Speech"
                ],
                "operationId": "postSpeech",
                "summary": "Create a text-to-speech resource.",
                "description": "\nTo create speech you need to supply the scriptId of the script you wish to generate, and the voice you would like to generate this request.\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "scriptId": {
                                        "type": "string",
                                        "description": "Reference to the Script that is to be synthesized, use `/script` to create and get it."
                                    },
                                    "voice": {
                                        "type": "string",
                                        "default": "Joanna",
                                        "description": "Either alias or original (provider's) ID. Available voices are listed at https://library.audiostack.ai/"
                                    },
                                    "speed": {
                                        "type": "number",
                                        "format": "float",
                                        "default": 1,
                                        "description": "Scalar for speed manipulation, range 0.5-3."
                                    },
                                    "silencePadding": {
                                        "type": "string",
                                        "description": "Amount of microseconds for silence padding. Half of the amount is inserted as silence at the beginning and at the end of each Speech file."
                                    },
                                    "audience": {
                                        "type": "object",
                                        "description": "\nObject defining the values for Script parameters. E.g. for Script parameters in:\n\n```xml\n<as:section name=\"main\"> \n    Hello <as:placeholder id=\"username\"> </as:placeholder>\n    how's your <as:placeholder id=\"weekday\"> </as:placeholder>\n</as:section>\n```\nThe object would be `{\"username\": \"Michael\", \"weekday\": \"Sunday\"}`.\n"
                                    },
                                    "sections": {
                                        "type": "object",
                                        "description": "Separate configurations for Script section. E.g. to specify a separate voice and speed for Script section `intro` the object would be `{\"intro\": {\"voice\": \"Leah\", \"speed\": 1.2}}`.\n"
                                    },
                                    "voiceIntelligence": {
                                        "type": "boolean",
                                        "description": "Flag to apply lexicographical text corrections"
                                    },
                                    "public": {
                                        "type": "boolean",
                                        "description": "Makes returned URLs publicly available"
                                    }
                                },
                                "required": [
                                    "scriptId"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Text-to-speech created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "speechId": {
                                                    "type": "string"
                                                },
                                                "scriptId": {
                                                    "type": "string"
                                                },
                                                "scriptMetadata": {
                                                    "type": "object",
                                                    "properties": {}
                                                },
                                                "projectName": {
                                                    "type": "string"
                                                },
                                                "moduleName": {
                                                    "type": "string"
                                                },
                                                "scriptName": {
                                                    "type": "string"
                                                },
                                                "creationDate": {
                                                    "type": "integer"
                                                },
                                                "sections": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "sectionName": {
                                                                "type": "string"
                                                            },
                                                            "statusCode": {
                                                                "type": "string"
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            },
                                                            "audience": {
                                                                "type": "object",
                                                                "properties": {}
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            },
                                                            "preview": {
                                                                "type": "string"
                                                            },
                                                            "voice": {
                                                                "type": "string"
                                                            },
                                                            "speed": {
                                                                "type": "integer"
                                                            },
                                                            "length": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "number"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "number"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {
                                            "speechId": "949e180c-5814-4f5f-a1eb-8cea1b292431",
                                            "scriptId": "8b2886d5-f0c9-403b-8ca1-e7f28c3430c4",
                                            "scriptMetadata": {},
                                            "projectName": "untitled",
                                            "moduleName": "untitled",
                                            "scriptName": "untitled",
                                            "creationDate": 1697731344,
                                            "sections": [
                                                {
                                                    "sectionName": "intro",
                                                    "statusCode": "201",
                                                    "message": "Synthesis successful.",
                                                    "audience": {},
                                                    "url": "******************",
                                                    "preview": "hello this is the new script syntax",
                                                    "voice": "joanna",
                                                    "speed": 1,
                                                    "length": [
                                                        2.35
                                                    ]
                                                },
                                                {
                                                    "sectionName": "main",
                                                    "statusCode": "201",
                                                    "message": "Synthesis successful.",
                                                    "audience": {},
                                                    "url": "******************",
                                                    "preview": "This uses regular H T M L syntax and replaces our ...",
                                                    "voice": "joanna",
                                                    "speed": 1,
                                                    "length": [
                                                        5.04
                                                    ]
                                                },
                                                {
                                                    "sectionName": "outro",
                                                    "statusCode": "201",
                                                    "message": "Synthesis successful.",
                                                    "audience": {},
                                                    "url": "******************",
                                                    "preview": "This massively improves usability, aids with learn...",
                                                    "voice": "joanna",
                                                    "speed": 1,
                                                    "length": [
                                                        5.12
                                                    ]
                                                }
                                            ]
                                        },
                                        "meta": {
                                            "version": "beta",
                                            "requestId": "******************",
                                            "creditsUsed": 0.0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Text-to-speech cached",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Voice or scriptId not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "Failed to find scriptId - item may have been deleted"
                                        ],
                                        "meta": {
                                            "version": "beta",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "speech request failed to validate",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Text-to-speech could not be created, see errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "Invalid JSON."
                                        ],
                                        "meta": {
                                            "version": "beta",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Missing body object",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Access denied. Could not find a valid organization."
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Speech"
                ],
                "operationId": "listTTS",
                "summary": "Lists multiple text-to-speech resources.",
                "description": "\nReturns a list of speech files that have been created. Can be filtered by `projectName`, `moduleName`, `scriptName` and `scriptId`.\n",
                "parameters": [
                    {
                        "in": "query",
                        "name": "projectName",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "moduleName",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scriptName",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scriptId",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "paginationToken",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "verbose",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Script created/updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "speechIds": {
                                                    "type": "array"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Query parameters not configured",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "ProjectName needs to be supplied to filter by moduleName."
                                        ],
                                        "meta": {
                                            "version": "3.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to list text-to-speech files",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Access denied. Could not find a valid organization."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/speech/tts/section": {
            "post": {
                "tags": [
                    "Speech"
                ],
                "operationId": "postSpeechSection",
                "summary": "Create a single section of a text-to-speech resource.",
                "description": "\nTo create speech you need to supply the scriptId of the script you wish to generate, and the voice you would like to generate this request.\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "scriptId": {
                                        "type": "string",
                                        "description": "Reference to the Script that is to be synthesized, use `/script` to create and get it."
                                    },
                                    "voice": {
                                        "type": "string",
                                        "default": "Joanna",
                                        "description": "Either alias or original (provider's) ID. Available voices are listed at https://library.audiostack.ai/"
                                    },
                                    "speed": {
                                        "type": "number",
                                        "format": "float",
                                        "default": 1,
                                        "description": "Scalar for speed manipulation, range 0.5-3."
                                    },
                                    "silencePadding": {
                                        "type": "string",
                                        "description": "Amount of microseconds for silence padding. Half of the amount is inserted as silence at the beginning and at the end of each Speech file."
                                    },
                                    "audience": {
                                        "type": "object",
                                        "description": "\nObject defining the values for Script parameters. E.g. for Script parameters in:\n\n```xml\n<as:section name=\"main\"> \n    Hello <as:placeholder id=\"username\"> </as:placeholder>\n    how's your <as:placeholder id=\"weekday\"> </as:placeholder>\n</as:section>\n```\nThe object would be `{\"username\": \"Michael\", \"weekday\": \"Sunday\"}`.\n"
                                    },
                                    "sections": {
                                        "type": "object",
                                        "description": "Separate configurations for Script section. E.g. to specify a separate voice and speed for Script section `intro` the object would be `{\"intro\": {\"voice\": \"Leah\", \"speed\": 1.2}}`.\n"
                                    },
                                    "voiceIntelligence": {
                                        "type": "boolean",
                                        "description": "Flag to apply lexicographical text corrections"
                                    },
                                    "public": {
                                        "type": "boolean",
                                        "description": "Makes returned URLs publicly available"
                                    },
                                    "sectionToProduce": {
                                        "type": "string",
                                        "description": "The name of the script section to produce"
                                    }
                                },
                                "required": [
                                    "scriptId",
                                    "sectionToProduce"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Text-to-speech created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "speechId": {
                                                    "type": "string"
                                                },
                                                "scriptId": {
                                                    "type": "string"
                                                },
                                                "scriptMetadata": {
                                                    "type": "object",
                                                    "properties": {}
                                                },
                                                "projectName": {
                                                    "type": "string"
                                                },
                                                "moduleName": {
                                                    "type": "string"
                                                },
                                                "scriptName": {
                                                    "type": "string"
                                                },
                                                "creationDate": {
                                                    "type": "integer"
                                                },
                                                "sections": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "sectionName": {
                                                                "type": "string"
                                                            },
                                                            "statusCode": {
                                                                "type": "string"
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            },
                                                            "audience": {
                                                                "type": "object",
                                                                "properties": {}
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            },
                                                            "preview": {
                                                                "type": "string"
                                                            },
                                                            "voice": {
                                                                "type": "string"
                                                            },
                                                            "speed": {
                                                                "type": "integer"
                                                            },
                                                            "length": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "number"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "number"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {
                                            "speechId": "027272b8-b540-404b-857c-e1e984e007a3",
                                            "scriptId": "2babe867-f4a7-4299-8c90-89ad11c0e845",
                                            "scriptMetadata": {},
                                            "projectName": "untitled",
                                            "moduleName": "untitled",
                                            "scriptName": "untitled",
                                            "creationDate": 1697731350,
                                            "sections": [
                                                {
                                                    "sectionName": "intro",
                                                    "statusCode": "201",
                                                    "message": "Synthesis successful.",
                                                    "audience": {},
                                                    "url": "******************",
                                                    "preview": "hello this is the new script syntax",
                                                    "voice": "joanna",
                                                    "speed": 1,
                                                    "length": [
                                                        2.35
                                                    ]
                                                }
                                            ]
                                        },
                                        "meta": {
                                            "version": "beta",
                                            "requestId": "******************",
                                            "creditsUsed": 0.0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Text-to-speech cached",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Text-to-speech could not be created, see errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "There are no sections to produce. Please check script and/or supplied parameters."
                                        ],
                                        "meta": {
                                            "version": "beta",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "speech request failed to validate",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Voice or scriptId not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "Failed to find scriptId - item may have been deleted"
                                        ],
                                        "meta": {
                                            "version": "beta",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "speech request failed to validate",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Text-to-speech could not be created, see errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "Invalid JSON."
                                        ],
                                        "meta": {
                                            "version": "beta",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Missing body object",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Access denied. Could not find a valid organization."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/speech/tts/preview": {
            "post": {
                "tags": [
                    "Speech"
                ],
                "operationId": "postSpeechPreview",
                "summary": "Create a fast preview of a given voice",
                "description": " This route is limited to 250 characters. Response schema is base64 bytes",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "text": {
                                        "type": "string",
                                        "description": "Text to synthesize limited to 250 characters."
                                    },
                                    "voice": {
                                        "type": "string",
                                        "default": "Joanna",
                                        "description": "Either alias or original (provider's) ID. Available voices are listed at https://library.audiostack.ai/"
                                    }
                                },
                                "required": [
                                    "voice",
                                    "properties"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Text-to-speech created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "example": {}
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Text-to-speech could not be created, see errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "number"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "voice: field required",
                                            "text: field required"
                                        ],
                                        "meta": {
                                            "version": "3.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0.0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to create preview",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Text-to-speech could not be created, see errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "number"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "Missing body object"
                                        ],
                                        "meta": {
                                            "version": "3.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0.0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to create preview",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Access denied. Could not find a valid organization."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/speech/tts/{speechId}": {
            "get": {
                "tags": [
                    "Speech"
                ],
                "operationId": "getSpeechId",
                "summary": "Retrieve a text-to-speech resource.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "speechId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Text-to-speech returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "speechId": {
                                                    "type": "string"
                                                },
                                                "scriptId": {
                                                    "type": "string"
                                                },
                                                "scriptMetadata": {
                                                    "type": "object",
                                                    "properties": {}
                                                },
                                                "projectName": {
                                                    "type": "string"
                                                },
                                                "moduleName": {
                                                    "type": "string"
                                                },
                                                "scriptName": {
                                                    "type": "string"
                                                },
                                                "creationDate": {
                                                    "type": "integer"
                                                },
                                                "sections": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "sectionName": {
                                                                "type": "string"
                                                            },
                                                            "statusCode": {
                                                                "type": "string"
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            },
                                                            "audience": {
                                                                "type": "object",
                                                                "properties": {}
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            },
                                                            "preview": {
                                                                "type": "string"
                                                            },
                                                            "voice": {
                                                                "type": "string"
                                                            },
                                                            "speed": {
                                                                "type": "integer"
                                                            },
                                                            "length": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "number"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "number"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {
                                            "speechId": "0c61323b-e80b-4e2a-99db-b61b780f45f8",
                                            "scriptId": "9160be01-6409-40d4-94c3-c2dfb2aa73cf",
                                            "scriptMetadata": {},
                                            "projectName": "untitled",
                                            "moduleName": "untitled",
                                            "scriptName": "untitled",
                                            "creationDate": 1698077053,
                                            "sections": [
                                                {
                                                    "sectionName": "default",
                                                    "statusCode": "201",
                                                    "message": "Synthesis successful.",
                                                    "audience": {},
                                                    "url": "******************",
                                                    "preview": "This is our first section of our script.",
                                                    "voice": "joanna",
                                                    "speed": 1,
                                                    "length": [
                                                        2.09
                                                    ]
                                                }
                                            ]
                                        },
                                        "meta": {
                                            "version": "3.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0.0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Text-to-speech created",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Text-to-speech not returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "speechId not found"
                                        ],
                                        "meta": {
                                            "version": "3.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to get text-to-speech item",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Access denied. Could not find a valid organization."
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Speech"
                ],
                "operationId": "deleteSpeechId",
                "summary": "Deletes a text-to-speech resource",
                "parameters": [
                    {
                        "in": "path",
                        "name": "speechId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Text-to-speech deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {}
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {},
                                        "meta": {
                                            "version": "3.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "text-to-speech (speechId=0c61323b-e80b-4e2a-99db-b61b780f45f8) item deleted",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Text-to-speech not deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "Internal server error."
                                        ],
                                        "meta": {
                                            "version": "3.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to delete text-to-speech item",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Access denied. Could not find a valid organization."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/speech/tts/reduce": {
            "post": {
                "tags": [
                    "Speech"
                ],
                "operationId": "postReduce",
                "summary": "Reduce length of speech to fit in a target using silence removal and time stretching with pitch preservation.",
                "description": "",
                "requestBody": {
                    "description": "Specify target length in seconds, supports float and int types",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "speechId": {
                                        "type": "string",
                                        "description": "speech id to reduce."
                                    },
                                    "targetLength": {
                                        "type": "number",
                                        "format": "float",
                                        "description": "Target length for duration of speech"
                                    }
                                },
                                "required": [
                                    "speechId",
                                    "targetLength"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Text-to-speech reduced",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "speechId": {
                                                    "type": "string"
                                                },
                                                "scriptId": {
                                                    "type": "string"
                                                },
                                                "scriptMetadata": {
                                                    "type": "object",
                                                    "properties": {}
                                                },
                                                "projectName": {
                                                    "type": "string"
                                                },
                                                "moduleName": {
                                                    "type": "string"
                                                },
                                                "scriptName": {
                                                    "type": "string"
                                                },
                                                "creationDate": {
                                                    "type": "integer"
                                                },
                                                "sections": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "sectionName": {
                                                                "type": "string"
                                                            },
                                                            "statusCode": {
                                                                "type": "string"
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            },
                                                            "audience": {
                                                                "type": "object",
                                                                "properties": {}
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            },
                                                            "preview": {
                                                                "type": "string"
                                                            },
                                                            "voice": {
                                                                "type": "string"
                                                            },
                                                            "speed": {
                                                                "type": "integer"
                                                            },
                                                            "length": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "number"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {
                                            "speechId": "49235e05-ee73-444c-873a-269dff1a9ec9",
                                            "scriptId": "315dbefb-f510-4c89-bfd1-584f8684462b",
                                            "scriptMetadata": {},
                                            "projectName": "untitled",
                                            "moduleName": "untitled",
                                            "scriptName": "untitled",
                                            "creationDate": 1697731366,
                                            "sections": [
                                                {
                                                    "sectionName": "intro",
                                                    "statusCode": "201",
                                                    "message": "Speech length reduced to 5.0 s.",
                                                    "audience": {},
                                                    "url": "******************",
                                                    "preview": "hello this is a test file for reduce, let's speed ...",
                                                    "voice": "joanna",
                                                    "speed": 1,
                                                    "length": [
                                                        4.994965986
                                                    ]
                                                }
                                            ]
                                        },
                                        "meta": {
                                            "version": "beta",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Success. Stretched speechId and files listed below",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Text-to-speech reduced",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "Time stretching ratio is not within a valid range."
                                        ],
                                        "meta": {
                                            "version": "beta",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to time-stretch audio",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/speech/tts/sync": {
            "post": {
                "tags": [
                    "Speech"
                ],
                "operationId": "postSpeechSync",
                "summary": "Synthesize speech directly from text (deprecated).",
                "description": "\n## sync Product Description\nGood for time-critical applications. **Maximum runtime is 30 seconds**.\\n### Caching\\nTTS responses are globally cached to improve performance. You can set `Cache-Control` to `no-cache` to skip the cache.\\nFollowing parameters are hashed as the cache key:\\n  - text\\n  - voice\\n  - speed\\n  - metadata\\n  - effect\\n  - bitrate\\n  - sampling_rate\\n  - output specified by the `Accept` header\\n\\nCache is missed when any of these parameters change.\\n\n\n\n",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Accept",
                        "description": "Specifies the format of the output audio.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "audio/wav",
                                "audio/mp3",
                                "audio/pcm"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "description": "\n\nFields `text` and `ssml` are interchangeable.\n\n### SSML\nWhen using `ssml` field, expected SSML format varies depending on provider of the voice. \nIf in doubt, consult provider's SSML documentation. Any kind of error will be forwarded back to you.\n\n### Limits\nMaximum character lengths:\n    - `text` field: 800 characters\n    - `ssml` field: 1000 characters\n\n",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "text": {
                                        "type": "string",
                                        "description": "Text to synthesize. Maximum 800 characters."
                                    },
                                    "ssml": {
                                        "type": "string",
                                        "description": "Text in SSML format to synthesize. Maximum 1000 characters. Expected SSML format varies depending on provider of the voice."
                                    },
                                    "voice": {
                                        "type": "string",
                                        "description": "Either alias or original (provider's) ID. Available voices are listed at https://library.api.audio/\n"
                                    },
                                    "metadata": {
                                        "type": "boolean",
                                        "description": "Return JSON with base64 encoded audio and visemes, if available."
                                    },
                                    "sampling_rate": {
                                        "type": "string",
                                        "enum": [
                                            "16000",
                                            "22050",
                                            "24000",
                                            "44100",
                                            "48000"
                                        ],
                                        "default": "24000",
                                        "description": "Sampling rate of the output. Applicable to wave format."
                                    },
                                    "bitrate": {
                                        "type": "string",
                                        "default": "192",
                                        "description": "Bitrate of the output. Applicable to mp3 format."
                                    },
                                    "effect": {
                                        "type": "string",
                                        "enum": [
                                            "chewie",
                                            "dark_father",
                                            "88b",
                                            "2r2d"
                                        ],
                                        "description": "Effect to apply to TTS."
                                    },
                                    "speed": {
                                        "type": "number",
                                        "format": "float",
                                        "default": 1,
                                        "description": "Scalar for speed manipulation, range 0.5-3."
                                    }
                                },
                                "required": [
                                    "text",
                                    "voice"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Text-to-speech created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "samplingRate": {
                                                    "type": "string"
                                                },
                                                "visemes": {
                                                    "type": "array"
                                                },
                                                "url": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "number"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {
                                            "samplingRate": "",
                                            "visemes": [],
                                            "url": "******************"
                                        },
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0.0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "sync tts successful",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Text-to-speech could not be created, see errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "number"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "Could not locate voice angrygerman"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0.0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to create sync tts",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Text-to-speech could not be created, see errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "number"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "Request's payload is not a valid JSON."
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0.0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to create sync tts",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Access denied. Could not find a valid organization."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/speech/voice": {
            "description": "\n## Product Description\nOut voice service manages voices. You can list and filter ones we have created for you, or in turn you can create your own with our voice cloning product.\nLibrary page: https://library.api.audio/.\n",
            "get": {
                "tags": [
                    "Voice"
                ],
                "operationId": "listVoices",
                "description": "\n\nTodo\n\n",
                "summary": "List all available voices.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Max. amount of items to be returned",
                        "schema": {
                            "type": "number",
                            "format": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Pagination offset. Should be incremented by the value of `itemsLimit` with each request.\n",
                        "schema": {
                            "type": "number",
                            "format": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "Sort order of items by an attribute.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "language",
                        "description": "Language of the voice.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "languageCode",
                        "description": "ISO language code of the voice, e.g. en-US\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "accent",
                        "description": "Accent of the voice.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "gender",
                        "description": "Gender of the voice.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ageBracket",
                        "description": "Age bracket of the voice.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "child",
                                "adult",
                                "senior"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "description": "Tags of the voice. Multiple tags separated by comma are accepted.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "industryExamples",
                        "description": "Multiple tags separated by comma are accepted.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timePerformance",
                        "description": "Relative response time.\n",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "fast",
                                "medium",
                                "slow"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "provider",
                        "description": "Provider of the voice.\n",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "msnr",
                                "polly",
                                "azure",
                                "google",
                                "ibm",
                                "retro",
                                "vocalid",
                                "resemble"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Voices listed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "voices": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "purpose": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "timePerformance": {
                                                                "type": "string"
                                                            },
                                                            "accent": {
                                                                "type": "string"
                                                            },
                                                            "audioSamples": {
                                                                "type": "object",
                                                                "properties": {}
                                                            },
                                                            "supportedLanguages": {
                                                                "type": "array"
                                                            },
                                                            "language": {
                                                                "type": "string"
                                                            },
                                                            "alias": {
                                                                "type": "string"
                                                            },
                                                            "isMultilingual": {
                                                                "type": "integer"
                                                            },
                                                            "provider": {
                                                                "type": "string"
                                                            },
                                                            "providerFullName": {
                                                                "type": "string"
                                                            },
                                                            "tags": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "supportedStyles": {
                                                                "type": "array"
                                                            },
                                                            "defaultStyle": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "languageCode": {
                                                                "type": "string"
                                                            },
                                                            "ageBracket": {
                                                                "type": "string"
                                                            },
                                                            "voiceId": {
                                                                "type": "string"
                                                            },
                                                            "picture": {
                                                                "type": "string"
                                                            },
                                                            "gender": {
                                                                "type": "string"
                                                            },
                                                            "providerId": {
                                                                "type": "string"
                                                            },
                                                            "sectionCharacterLimit": {
                                                                "type": "integer"
                                                            },
                                                            "charsPerSecond": {
                                                                "type": "string"
                                                            },
                                                            "basicEmotion": {
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "type": "string"
                                                            },
                                                            "audioSample": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "number"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Access denied. Could not find a valid organization."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/speech/voice/parameter": {
            "get": {
                "tags": [
                    "Voice"
                ],
                "operationId": "listVoiceParameters",
                "summary": "Lists voice parameters.",
                "description": "Lists all the voice parameters used to describe and filter voices",
                "responses": {
                    "200": {
                        "description": "Voice parameters listed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "voices": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "purpose": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "timePerformance": {
                                                                "type": "string"
                                                            },
                                                            "accent": {
                                                                "type": "string"
                                                            },
                                                            "audioSamples": {
                                                                "type": "object",
                                                                "properties": {}
                                                            },
                                                            "supportedLanguages": {
                                                                "type": "array"
                                                            },
                                                            "language": {
                                                                "type": "string"
                                                            },
                                                            "alias": {
                                                                "type": "string"
                                                            },
                                                            "isMultilingual": {
                                                                "type": "integer"
                                                            },
                                                            "provider": {
                                                                "type": "string"
                                                            },
                                                            "providerFullName": {
                                                                "type": "string"
                                                            },
                                                            "tags": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "supportedStyles": {
                                                                "type": "array"
                                                            },
                                                            "defaultStyle": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "languageCode": {
                                                                "type": "string"
                                                            },
                                                            "ageBracket": {
                                                                "type": "string"
                                                            },
                                                            "voiceId": {
                                                                "type": "string"
                                                            },
                                                            "picture": {
                                                                "type": "string"
                                                            },
                                                            "gender": {
                                                                "type": "string"
                                                            },
                                                            "providerId": {
                                                                "type": "string"
                                                            },
                                                            "sectionCharacterLimit": {
                                                                "type": "integer"
                                                            },
                                                            "charsPerSecond": {
                                                                "type": "string"
                                                            },
                                                            "basicEmotion": {
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "type": "string"
                                                            },
                                                            "audioSample": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "number"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Access denied. Could not find a valid organization."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/voice/name/{name}": {
            "get": {
                "tags": [
                    "Voice"
                ],
                "operationId": "getVoiceName",
                "summary": "Get data for a single voice.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "required": true,
                        "description": "Alias or original voice ID.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Voices retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "alias": {
                                                    "type": "string"
                                                },
                                                "voiceId": {
                                                    "type": "string"
                                                },
                                                "languageCode": {
                                                    "type": "string"
                                                },
                                                "language": {
                                                    "type": "string"
                                                },
                                                "timePerformance": {
                                                    "type": "string"
                                                },
                                                "gender": {
                                                    "type": "string"
                                                },
                                                "accent": {
                                                    "type": "string"
                                                },
                                                "ageBracket": {
                                                    "type": "string"
                                                },
                                                "supportedStyles": {
                                                    "type": "array"
                                                },
                                                "defaultStyle": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "basicEmotion": {
                                                    "type": "string"
                                                },
                                                "tags": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "audioSample": {
                                                    "type": "string"
                                                },
                                                "purpose": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "picture": {
                                                    "type": "string"
                                                },
                                                "meta": {
                                                    "type": "object",
                                                    "properties": {}
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "number"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {
                                            "alias": "joanna",
                                            "voiceId": "348eb644-b6a1-11ed-ad9b-3a5b2353d1ca",
                                            "languageCode": "en-US",
                                            "language": "english",
                                            "timePerformance": "fast",
                                            "gender": "female",
                                            "accent": "american",
                                            "ageBracket": "adult",
                                            "supportedStyles": [],
                                            "defaultStyle": [
                                                "engaging",
                                                "calm",
                                                "serious"
                                            ],
                                            "basicEmotion": "neutral",
                                            "tags": [
                                                "steady",
                                                "confident",
                                                "balanced",
                                                "informative",
                                                "serious"
                                            ],
                                            "audioSample": "https://file.audiostack.ai/voice-samples/joanna.mp3",
                                            "purpose": [
                                                "advertisement",
                                                "e-commerce",
                                                "health and fitness",
                                                "business"
                                            ],
                                            "picture": "https://file.audiostack.ai/image-samples/linda.jpg",
                                            "meta": {}
                                        },
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0.0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Voice retrieved succesfully.",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Voices not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "number"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "Voice hackermansam does not exist. Check available voices at https://library.api.audio/voices"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0.0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Voice not found.",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Access denied. Could not find a valid organization."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/speech/diction/custom/item": {
            "description": "\n## Product Description\nOur dictionary service is...\n\n",
            "put": {
                "tags": [
                    "Dictionary"
                ],
                "operationId": "putWordInDictionary",
                "summary": "Add word to a custom dictionary",
                "description": "\n\nFor each language, only a single word entry is permitted. However, each word can have multiple specializations. When a word is first registered a default specialization is always created, which will match what is passed in. Subsequent calls with different specializations will only update the given specialization. The exact repacement that will be used is determined by the following order of preference:\n\nvoice name > language dialect > provider name > default\n\nFor example, a replacement specified for voice name sara will be picked over a replacement specified for provider azure.\n\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "lang": {
                                        "type": "string",
                                        "description": "Language family, e.g. en or es.dictionary - use global to register a word globally (default).",
                                        "default": "global"
                                    },
                                    "word": {
                                        "type": "string",
                                        "description": "Word to be replaced."
                                    },
                                    "replacement": {
                                        "type": "string",
                                        "description": "The replacement token. Can be either a plain string or a IPA token."
                                    },
                                    "contentType": {
                                        "type": "string",
                                        "description": "The content type of the supplied replacement, can be either basic (default) or ipa for phonetic replacements."
                                    },
                                    "specialization": {
                                        "type": "string",
                                        "description": "by default the supplied replacement will apply regardless of the supplied voice, language code or provider. However edge cases can be supplied, these can be either a valid; provider name, language code (i.e. en-gb) or voice name."
                                    }
                                },
                                "required": [
                                    "word",
                                    "replacement"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Script created/updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "replacements": {
                                                    "type": "object",
                                                    "properties": {
                                                        "default": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                },
                                                                "replacement": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "inputs": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "number"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {
                                            "replacements": {
                                                "default": {
                                                    "type": "basic",
                                                    "replacement": "saypeeoons"
                                                }
                                            },
                                            "inputs": [
                                                "sapiens"
                                            ]
                                        },
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0.0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Occurrences of 'sapiens' will now be replaced for 'saypeeoons' in 'global' language dictionary",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Word not added, see errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "number"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "Empty body"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0.0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to add word to dictionary",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Missing authentication token. There might be no such route or method."
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Dictionary"
                ],
                "operationId": "deleteWordInDictionary",
                "summary": "Deletes a word from a dictionary.",
                "description": "By default this will delete all specializations of the word, if you want to delete a specific specialization, supply this as a query parameter",
                "parameters": [
                    {
                        "in": "query",
                        "name": "lang",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "word",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "specialization",
                        "required": false,
                        "description": "Delete a specific specialization",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Script created/updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {}
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "number"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {},
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0.0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "word 'xyz' removed",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Word not deleted, see errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "number"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "word and lang must be provided"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0.0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to delete word from dictionary",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Missing authentication token. There might be no such route or method."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/speech/diction": {
            "get": {
                "tags": [
                    "Dictionary"
                ],
                "operationId": "listDictionaries",
                "summary": "List dictionaries",
                "description": "Lists all  public dictionaries. This lists all the words but not the actual replacements. Listing of replacement tokens for inbuilt dicts is not available",
                "responses": {
                    "200": {
                        "description": "Script created/updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "dictionaries": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "lang": {
                                                                "type": "string"
                                                            },
                                                            "words": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "content": {
                                                                "type": "string"
                                                            },
                                                            "wordCategory": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Missing authentication token. There might be no such route or method."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/speech/diction/custom": {
            "get": {
                "tags": [
                    "Dictionary"
                ],
                "operationId": "listCustomDictionaries",
                "summary": "List dictionaries",
                "description": "Lists all custom dictionaries. This lists all the words but not the actual replacements.",
                "responses": {
                    "200": {
                        "description": "Script created/updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "dictionaries": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "lang": {
                                                                "type": "string"
                                                            },
                                                            "words": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "content": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Missing authentication token. There might be no such route or method."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/speech/diction/custom/items": {
            "get": {
                "tags": [
                    "Dictionary"
                ],
                "operationId": "listCustomWords",
                "summary": "Lists all words within a custom dictionary. Lang must be supplied.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "lang",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Script created/updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "words": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "replacements": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "default": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "replacement": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "inputs": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed to list words",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "lang must be provided"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to list words",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Missing authentication token. There might be no such route or method."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/production/sound/template": {
            "description": "\n## Product Description\n\nOut sound service manages sound templates. You can list and filter ones we have created for you, or in turn you can create your own.\n",
            "post": {
                "tags": [
                    "Sound Template"
                ],
                "operationId": "postTemplate",
                "summary": "Create a sound template resource.",
                "description": "\n\nTo do\n\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "templateName": {
                                        "type": "string",
                                        "description": "Name of the template"
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "Description of the template"
                                    },
                                    "isElastic": {
                                        "type": "boolean",
                                        "default": false,
                                        "description": "Elastic templates are currently not available to self-serve customers"
                                    }
                                },
                                "required": [
                                    "templateName"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sound template created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "template": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "alias": {
                                                            "type": "string"
                                                        },
                                                        "samples": {
                                                            "type": "object",
                                                            "properties": {}
                                                        },
                                                        "tags": {
                                                            "type": "object",
                                                            "properties": {}
                                                        },
                                                        "durations": {
                                                            "type": "object",
                                                            "properties": {
                                                                "min": {
                                                                    "type": "integer"
                                                                },
                                                                "max": {
                                                                    "type": "integer"
                                                                },
                                                                "increments": {
                                                                    "type": "integer"
                                                                },
                                                                "fixed_values": {
                                                                    "type": "array"
                                                                }
                                                            }
                                                        },
                                                        "license_type": {
                                                            "type": "string"
                                                        },
                                                        "soundTemplateId": {
                                                            "type": "string"
                                                        },
                                                        "accessType": {
                                                            "type": "string"
                                                        },
                                                        "templateGeneration": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                },
                                                                "data": {
                                                                    "type": "object",
                                                                    "properties": {}
                                                                }
                                                            }
                                                        },
                                                        "segmentNames": {
                                                            "type": "array"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {
                                            "template": {
                                                "name": "test101",
                                                "alias": "test101",
                                                "samples": {},
                                                "tags": {},
                                                "durations": {
                                                    "min": 0,
                                                    "max": 0,
                                                    "increments": 0,
                                                    "fixed_values": []
                                                },
                                                "license_type": "standard",
                                                "soundTemplateId": "d3f778ba-c8dc-4a87-98bd-98a253df7ef6",
                                                "accessType": "private",
                                                "templateGeneration": {
                                                    "type": "static",
                                                    "data": {}
                                                },
                                                "segmentNames": []
                                            }
                                        },
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "New template created",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sound template not created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "Request failed with error the JSON object must be str, bytes or bytearray, not NoneType"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Empty body in event",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key and/or your org cannot created templates",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Access denied. Could not find a valid organization."
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Sound Template"
                ],
                "operationId": "getTemplate",
                "summary": "Lists sound templates.",
                "description": "\n\nTo do\n\n",
                "parameters": [
                    {
                        "in": "query",
                        "name": "moods",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "collections",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "instruments",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "genres",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sound templates listed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "tags is not an allowed filtering parameter. Allowed filtering parameters: moods mood_clusters collections collection_clusters instruments genres template_generation"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to list sound templates",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Sound templates not listed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "soundLevel is not an allowed filtering parameter. Allowed filtering parameters: moods mood_clusters collections collection_clusters instruments genres template_generation"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to list sound templates",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Access denied. Could not find a valid organization."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/production/sound/template/{name}": {
            "delete": {
                "tags": [
                    "Sound Template"
                ],
                "operationId": "deleteTemplate",
                "summary": "Deletes a sound template",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sound template deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {}
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {},
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Template 3b77c20f-d598-41e9-be9f-3eaef1e1562a has been deleted.",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sound template not deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "Unable to delete template, it does not exist"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to delete template",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key and/or your org cannot created templates",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Access denied. Could not find a valid organization."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/content/media/create-upload-url": {
            "description": "\n## Product Description\n\nThe media service allows you to upload your existing audio files into our ecosystem. We currently only support uploading mp3 and wav files.\n\n\n",
            "post": {
                "tags": [
                    "Media"
                ],
                "operationId": "postMedia",
                "summary": "Creates a url for uploading a new media file.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "fileName"
                                ],
                                "properties": {
                                    "fileName": {
                                        "type": "string"
                                    },
                                    "tags": {
                                        "type": "array"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "presigned upload url created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "mediaId": {
                                                    "type": "string"
                                                },
                                                "fileUploadUrl": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {
                                            "mediaId": "879b11c2",
                                            "fileUploadUrl": "******************"
                                        },
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Upload url created ",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Failed to create upload url",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "Your storage is full. Max size is 1024mb"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to create upload url",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Failed to create upload url",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "fileName: File format not supported. It should be either 'mp3' or 'wav'"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to create upload url",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed to create upload url",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "the JSON object must be str, bytes or bytearray, not NoneType"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to create upload url",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Missing authentication token. There might be no such route or method."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/content/media": {
            "description": "List all uploaded media files",
            "get": {
                "tags": [
                    "Media"
                ],
                "operationId": "listMedia",
                "summary": "Lists media files.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Media files listed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "mediaFiles": {
                                                    "type": "array"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Missing authentication token. There might be no such route or method."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/content/media/{mediaId}": {
            "get": {
                "tags": [
                    "Media"
                ],
                "operationId": "getMediaId",
                "summary": "Get a single media file and its url for download.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "mediaId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MediaId deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "filename": {
                                                    "type": "string"
                                                },
                                                "tags": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "url": {
                                                    "type": "string"
                                                },
                                                "mediaId": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {
                                            "filename": "xyz.wav",
                                            "tags": [
                                                "hello"
                                            ],
                                            "url": "******************",
                                            "mediaId": "36a45b31"
                                        },
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Retrieved media",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "MediaId not found - cannot be deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "x does not exist"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to find media file",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Missing authentication token. There might be no such route or method."
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Media"
                ],
                "operationId": "deleteMediaId",
                "summary": "Deletes a media file.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "mediaId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MediaId deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {}
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {},
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Removed mediaId: 8168e6e2",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "MediaId not found - cannot be deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "x does not exist"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to delete media file",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Missing authentication token. There might be no such route or method."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/production/mix": {
            "description": "\n## Product Description\n\nOur production endpoints replicate the functionality of a recording studio. Mixing together multiple streams of audio and enhancing these with studio grade effects, such as ducking, de-essing, EQ and compression. You can use our `sectionProperties` argument to arrange sources across a virtual timeline, and align these to fixed markers.\n\n",
            "post": {
                "tags": [
                    "Mixing"
                ],
                "operationId": "postMix",
                "summary": "Creates a mix of multiple audio resources.",
                "description": "\ntodo\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "speechId": {
                                        "type": "string",
                                        "description": "Reference to the speechId that is to be mixed with other audio resources"
                                    },
                                    "soundTemplate": {
                                        "type": "string",
                                        "description": "Name of the sound template to be mixed with other audio resources"
                                    },
                                    "soundLayer": {
                                        "type": "string",
                                        "description": "(Beta) Which layer of the sound template should be used"
                                    },
                                    "mediaFiles": {
                                        "type": "object",
                                        "format": "{placeholder : mediaId }",
                                        "description": "List of media files to be mixed with other audio resources"
                                    },
                                    "fxFiles": {
                                        "type": "object",
                                        "format": "{placeholder : fxId }",
                                        "description": "List of fx files to be mixed with other audio resources"
                                    },
                                    "public": {
                                        "type": "boolean",
                                        "description": "Makes returned URLs publicly available"
                                    },
                                    "sectionProperties": {
                                        "type": "object",
                                        "description": "\nSection properties exposes the following properties for each section. Note that the properties apply to all sub-sections also. \n```py\n{\n    \"<sectionName>\" : {\n        \"startAt\" : \"<time in seconds>\",\n        \"endAt\" : \"<time in seconds>\",\n        \"alignment\" : \"<left, centre or right>\",\n        \"fadeIn\" : \"<time in seconds>\",\n        \"fadeOut\" : \"<time in seconds>\",\n        \"padding\" : \"<time in seconds that is added after this script section>\"\n    }\n}\n```\n"
                                    },
                                    "timelineProperties": {
                                        "type": "object",
                                        "description": "\nTimeline properties exposes the following properties for each section. Note that the properties apply to all sub-sections also. \n```py\n{\n    \"forceLength\" : \"<time in seconds that the resultant file will be>\",\n    \"speechStart\" : \"<time in seconds that the speech track will start>\",\n    \"soundTail\" : \"<time in seconds that the sound template track will play at the end>\",\n    \"fadeIn\" : \"<time in seconds>\",\n    \"fadeOut\" : \"<time in seconds>\",\n    \"padding\" : \"<time in seconds that is added between each script section>\"\n}\n```\n"
                                    },
                                    "masteringPreset": {
                                        "type": "string",
                                        "description": "Mastering preset to use, for example heavyDucking."
                                    },
                                    "strictValidation": {
                                        "type": "boolean",
                                        "description": "To bypass timeline protection set this to false. Results may vary and sound files might overlap"
                                    },
                                    "exportSettings": {
                                        "type": "object",
                                        "description": "\nExport settings can be used to export special audio assets from the mastering process. Currently the following flags are supported:\n\n`ttsTrack` - (true or false) will return the isolated voice track in the response.\n\n",
                                        "properties": {},
                                        "additionalProperties": true
                                    }
                                },
                                "required": [
                                    "speechId"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Mix created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "productionId": {
                                                    "type": "string"
                                                },
                                                "scriptId": {
                                                    "type": "string"
                                                },
                                                "scriptMetadata": {
                                                    "type": "object",
                                                    "properties": {}
                                                },
                                                "projectName": {
                                                    "type": "string"
                                                },
                                                "moduleName": {
                                                    "type": "string"
                                                },
                                                "scriptName": {
                                                    "type": "string"
                                                },
                                                "creationDate": {
                                                    "type": "integer"
                                                },
                                                "fileLength": {
                                                    "type": "number"
                                                },
                                                "files": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "statusCode": {
                                                                "type": "integer"
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            },
                                                            "format": {
                                                                "type": "string"
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            },
                                                            "errors": {
                                                                "type": "string"
                                                            },
                                                            "filename": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {
                                            "productionId": "7a59ae07-d8b5-40bc-b3dc-de86dbacad4c",
                                            "scriptId": "8b2886d5-f0c9-403b-8ca1-e7f28c3430c4",
                                            "scriptMetadata": {},
                                            "projectName": "untitled",
                                            "moduleName": "untitled",
                                            "scriptName": "untitled",
                                            "creationDate": 1698138245,
                                            "fileLength": 16.51,
                                            "files": [
                                                {
                                                    "statusCode": 201,
                                                    "message": "Mastering completed successfully",
                                                    "format": "wav",
                                                    "url": "******************",
                                                    "errors": "",
                                                    "filename": "primary"
                                                },
                                                {
                                                    "statusCode": 201,
                                                    "message": "tts export track",
                                                    "format": "mp3",
                                                    "url": "******************",
                                                    "errors": "",
                                                    "filename": "ttsTrack"
                                                }
                                            ]
                                        },
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "mix created",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "SpeechId not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "Failed to find speechId"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "mastering request failed to validate",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Mix could not be created, see errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "Empty body"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "mastering request failed to validate",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Access denied. Could not find a valid organization."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/production/validate": {
            "post": {
                "tags": [
                    "Mixing"
                ],
                "operationId": "validateMix",
                "summary": "Validates that the requested mastering request is valid",
                "description": "\nThis route can be used to check that the requested mastering request is valid. For example, ensure your timelineProperties and sectionProperties are valid.\nThe actual requests is not sent for processing, meaning you are not charged production credits for this feature.\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "speechId": {
                                        "type": "string",
                                        "description": "Reference to the speechId that is to be mixed with other audio resources"
                                    },
                                    "soundTemplate": {
                                        "type": "string",
                                        "description": "Name of the sound template to be mixed with other audio resources"
                                    },
                                    "soundLayer": {
                                        "type": "string",
                                        "description": "(Beta) Which layer of the sound template should be used"
                                    },
                                    "mediaFiles": {
                                        "type": "object",
                                        "format": "{placeholder : mediaId }",
                                        "description": "List of media files to be mixed with other audio resources"
                                    },
                                    "fxFiles": {
                                        "type": "object",
                                        "format": "{placeholder : fxId }",
                                        "description": "List of fx files to be mixed with other audio resources"
                                    },
                                    "public": {
                                        "type": "boolean",
                                        "description": "Makes returned URLs publicly available"
                                    },
                                    "sectionProperties": {
                                        "type": "object",
                                        "description": "\nSection properties exposes the following properties for each section. Note that the properties apply to all sub-sections also. \n```py\n{\n    \"<sectionName>\" : {\n        \"startAt\" : \"<time in seconds>\",\n        \"endAt\" : \"<time in seconds>\",\n        \"alignment\" : \"<left, centre or right>\",\n        \"fadeIn\" : \"<time in seconds>\",\n        \"fadeOut\" : \"<time in seconds>\",\n        \"padding\" : \"<time in seconds that is added after this script section>\"\n    }\n}\n```\n",
                                        "properties": {},
                                        "additionalProperties": true
                                    },
                                    "timelineProperties": {
                                        "type": "object",
                                        "description": "\nTimeline properties exposes the following properties for each section. Note that the properties apply to all sub-sections also. \n```py\n{\n    \"forceLength\" : \"<time in seconds that the resultant file will be>\",\n    \"speechStart\" : \"<time in seconds that the speech track will start>\",\n    \"soundTail\" : \"<time in seconds that the sound template track will play at the end>\",\n    \"fadeIn\" : \"<time in seconds>\",\n    \"fadeOut\" : \"<time in seconds>\",\n    \"padding\" : \"<time in seconds that is added between each script section>\"\n}\n```\n",
                                        "properties": {},
                                        "additionalProperties": true
                                    },
                                    "masteringPreset": {
                                        "type": "string",
                                        "description": "Mastering preset to use, for example heavyDucking."
                                    },
                                    "strictValidation": {
                                        "type": "boolean",
                                        "description": "To bypass timeline protection set this to false. Results may vary and sound files might overlap"
                                    },
                                    "exportSettings": {
                                        "type": "object",
                                        "description": "\nExport settings can be used to export special audio assets from the mastering process. Currently the following flags are supported:\n\n`ttsTrack` - (true or false) will return the isolated voice track in the response.\n\n",
                                        "properties": {},
                                        "additionalProperties": true
                                    }
                                },
                                "required": [
                                    "speechId"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Mix created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {}
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {},
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "mastering request is valid",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "SpeechId not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "Failed to find speechId"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "mastering request failed to validate",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Mix could not be created, see errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "Empty body"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "mastering request failed to validate",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Access denied. Could not find a valid organization."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/production/mixes": {
            "get": {
                "tags": [
                    "Mixing"
                ],
                "operationId": "listMixes",
                "summary": "Lists multiple mixed resources.",
                "description": "\nReturns a list of mixed files that have been created. Can be filtered by `projectName`, `moduleName`, `scriptName` and `scriptId`.\n",
                "parameters": [
                    {
                        "in": "query",
                        "name": "projectName",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "moduleName",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scriptName",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scriptId",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "paginationToken",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "verbose",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Script created/updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "productionIds": {
                                                    "type": "array"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Query parameters not configured",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "ProjectName needs to be supplied to filter by moduleName."
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to list mixed files",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Missing authentication token. There might be no such route or method."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/production/mix/{productionId}": {
            "get": {
                "tags": [
                    "Mixing"
                ],
                "operationId": "getProductionId",
                "summary": "Retrieve a mixed resource.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "productionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mix returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "productionId": {
                                                    "type": "string"
                                                },
                                                "scriptId": {
                                                    "type": "string"
                                                },
                                                "scriptMetadata": {
                                                    "type": "object",
                                                    "properties": {}
                                                },
                                                "projectName": {
                                                    "type": "string"
                                                },
                                                "moduleName": {
                                                    "type": "string"
                                                },
                                                "scriptName": {
                                                    "type": "string"
                                                },
                                                "creationDate": {
                                                    "type": "integer"
                                                },
                                                "fileLength": {
                                                    "type": "integer"
                                                },
                                                "files": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "statusCode": {
                                                                "type": "integer"
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            },
                                                            "format": {
                                                                "type": "string"
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            },
                                                            "errors": {
                                                                "type": "string"
                                                            },
                                                            "filename": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {
                                            "productionId": "b71dfa87-feff-4bbf-af5e-5195ce3b3a4c",
                                            "scriptId": "c43d3468-7f5a-4118-b8b3-242a29c55494",
                                            "scriptMetadata": {},
                                            "projectName": "untitled",
                                            "moduleName": "untitled",
                                            "scriptName": "untitled",
                                            "creationDate": 1698138258,
                                            "fileLength": -1,
                                            "files": [
                                                {
                                                    "statusCode": 201,
                                                    "message": "Mastering completed successfully",
                                                    "format": "wav",
                                                    "url": "******************",
                                                    "errors": "",
                                                    "filename": "primary"
                                                }
                                            ]
                                        },
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "mix retrieved",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Mix not returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "productionId x not found"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to retrieve mixed audio.",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Access denied. Could not find a valid organization."
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Mixing"
                ],
                "operationId": "deleteProductionId",
                "summary": "Deletes a mixed resource",
                "parameters": [
                    {
                        "in": "path",
                        "name": "productionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mix deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {}
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {},
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "productionId 12348bc9-14a5-477e-aad6-067a94a9fa8b deleted!",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Mix not returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "Internal server error."
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to delete mix item",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Missing authentication token. There might be no such route or method."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/production/mix/presets": {
            "get": {
                "tags": [
                    "Mixing"
                ],
                "operationId": "listMasteringPresets",
                "summary": "Lists available mastering presets.",
                "responses": {
                    "200": {
                        "description": "Script created/updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "presets": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "description": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {
                                            "presets": [
                                                {
                                                    "name": "balanced",
                                                    "description": "Balanced preset for combining ducking and saturation to create a balanced mix"
                                                },
                                                {
                                                    "name": "musicenhanced",
                                                    "description": "Preset for loud music volume"
                                                },
                                                {
                                                    "name": "podcast",
                                                    "description": "Smoother preset for podcasting"
                                                },
                                                {
                                                    "name": "voiceenhanced",
                                                    "description": "Preset for loud voice track volume"
                                                },
                                                {
                                                    "name": "voiceonly",
                                                    "description": "anoher preset for combining ducking and saturation to create a balanced mix"
                                                }
                                            ]
                                        },
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Mix presets listed below.",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Missing authentication token. There might be no such route or method."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/delivery/encoder": {
            "description": "\n## Product Description\n\nOut Delivery endpoints put the finishing touches on your mixed audio assets. Our encoder can be used to convert your file into a different format i.e. `mp3`. Our connector endpoints allow you to publish these assets onwards.\n\n",
            "post": {
                "tags": [
                    "Encoder"
                ],
                "operationId": "postEncoder",
                "summary": "Changes the audio encoding of a mixed audio file",
                "description": "\nFor most use cases, the preset can be either `custom` or one of the values returned from the `/encoder/presets` list. When using `custom` the other fields can be supplied. Please note not all fields are supported in conjunction with one another. For example `sampleRate` cannot be used in conjunction with `bitRateType`.\n",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "productionId": {
                                        "type": "string",
                                        "description": "Reference to the productionId that is to be encoded"
                                    },
                                    "preset": {
                                        "type": "string",
                                        "description": "named preset to use or 'custom'. Available presets can be listed using '/delivery/encoder/presets'"
                                    },
                                    "public": {
                                        "type": "boolean",
                                        "description": "Make the output a publicly available URL "
                                    },
                                    "bitRateType": {
                                        "type": "string",
                                        "description": "Supplied value must be either 'constant' or 'variable"
                                    },
                                    "bitRate": {
                                        "type": "string",
                                        "description": "Can be between 0-9 for variable bit rates, or between 32 and 320 for constant bit rates"
                                    },
                                    "sampleRate": {
                                        "type": "integer",
                                        "description": "Sample rate, should be between 24000 and 96000"
                                    },
                                    "format": {
                                        "type": "string",
                                        "description": "Can be wav, mp3, flac or ogg"
                                    },
                                    "bitDepth": {
                                        "type": "integer",
                                        "description": "Can be 16, 24, or 32"
                                    },
                                    "channels": {
                                        "type": "integer",
                                        "description": "Supply 1 for mono or 2 for stereo"
                                    },
                                    "loudnessPreset": {
                                        "type": "string",
                                        "description": "Name of loudness preset to use for example 'podcast' or 'spotify'. Available presets can be listed using '/delivery/encoder/presets'"
                                    }
                                },
                                "required": [
                                    "productionId"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Encoded mix created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                },
                                                "url": {
                                                    "type": "string"
                                                },
                                                "warnings": {
                                                    "type": "string"
                                                },
                                                "format": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {
                                            "message": "Encoded sucessfully",
                                            "url": "******************",
                                            "warnings": "",
                                            "format": "mp3"
                                        },
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Audio processed successfully",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Encoded mix could not be created, see errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "Either speechId or productionId should be supplied."
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to encode audio",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Encoded mix could not be created, see errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "'preset'"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to encode audio",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Access denied. Could not find a valid organization."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/delivery/connectors/julep": {
            "description": "\nJulep is a podcast hosting platform based in Germany. On top of hosting your audio content, they also offer monetization and their own, embeddable player. In order to use this connector you\u2019ll need an account with Julep.\n\nTo authenticate with julep we recommend you do this through the Audiostack console.\n",
            "post": {
                "tags": [
                    "Julep"
                ],
                "operationId": "postJulep",
                "summary": "Sends a produced file to Julep connector",
                "description": "",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "productionId": {
                                        "type": "string",
                                        "description": "Reference to the productionId that is to be delivered to the connector"
                                    },
                                    "podcastId": {
                                        "type": "string",
                                        "description": "Id of the podcast"
                                    },
                                    "title": {
                                        "type": "string",
                                        "description": "Title of podcast"
                                    },
                                    "permalink": {
                                        "type": "string",
                                        "description": "permalink for podcast"
                                    },
                                    "subtitle": {
                                        "type": "string",
                                        "description": "Subtitle for podcast"
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "podcast description"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "notes for the podcast"
                                    },
                                    "publishedAt": {
                                        "type": "string",
                                        "description": "Changes the date of publication. publishedAt parameter should be in YYYY-MM-DD HH:MM:SS format."
                                    }
                                },
                                "required": [
                                    "productionId",
                                    "podcastId",
                                    "title",
                                    "permalink"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Delivery started",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "deliveryId": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "example": {
                                        "data": {
                                            "deliveryId": "04a37ecc-5366-408c-b9e0-53a05669bb12"
                                        },
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Julep episode upload started",
                                        "warnings": [
                                            "Indicated billing is lower then the actual value, which will be calculated once your request is finished."
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Delivery could not be created, see errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "podcastId: field required",
                                            "title: field required",
                                            "permalink: field required"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to validate body",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Delivery could not be created, see errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "number"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "Failed to load credentials"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0.0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to authenticate",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Access denied. Could not find a valid organization."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/delivery/connectors/authenticate-julep": {
            "put": {
                "tags": [
                    "Julep"
                ],
                "operationId": "putJulepCredentials",
                "summary": "Authenticates with Julep",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "description": "Julep username"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "Julep password"
                                    }
                                },
                                "required": [
                                    "username",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {}
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "number"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {},
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0.0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "authenticated",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "failed to authenticate",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "number"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "Failed to load credentials"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0.0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to authenticate",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Missing authentication token. There might be no such route or method."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/delivery/connectors/status": {
            "get": {
                "tags": [
                    "Connector"
                ],
                "operationId": "listConnectorDeliveries",
                "summary": "Lists all connected deliveries.",
                "responses": {
                    "200": {
                        "description": "List of delivered connections",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "deliveries": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "orgId": {
                                                                "type": "string"
                                                            },
                                                            "response": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "episodeId": {
                                                                        "type": "integer"
                                                                    },
                                                                    "playerContentLink": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            },
                                                            "deliveryId": {
                                                                "type": "string"
                                                            },
                                                            "connectorType": {
                                                                "type": "string"
                                                            },
                                                            "statusCode": {
                                                                "type": "integer"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Missing authentication token. There might be no such route or method."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/delivery/connectors/status/{deliveryId}": {
            "get": {
                "tags": [
                    "Connector"
                ],
                "operationId": "getConnectorDelivery",
                "summary": "Get a single delivery.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "deliveryId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delivery status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "orgId": {
                                                    "type": "string"
                                                },
                                                "deliveryId": {
                                                    "type": "string"
                                                },
                                                "connectorType": {
                                                    "type": "string"
                                                },
                                                "statusCode": {
                                                    "type": "integer"
                                                },
                                                "response": {
                                                    "type": "object",
                                                    "properties": {}
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {
                                            "orgId": "******************",
                                            "deliveryId": "0ed86200-1c09-4614-b681-16bb5e6b2996",
                                            "connectorType": "julep",
                                            "statusCode": 202,
                                            "response": {}
                                        },
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "deliverable retrieved.",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Delivery status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "Not found"
                                        ],
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Failed to retrieve deliverable",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Missing authentication token. There might be no such route or method."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/delivery/encoder/presets": {
            "get": {
                "tags": [
                    "Encoder"
                ],
                "operationId": "listEncoderPresets",
                "summary": "Lists available encoder presets and loudness presets",
                "responses": {
                    "200": {
                        "description": "Script created/updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "presets": {
                                                    "type": "object",
                                                    "properties": {
                                                        "mp3": {
                                                            "type": "string"
                                                        },
                                                        "wav": {
                                                            "type": "string"
                                                        },
                                                        "ogg": {
                                                            "type": "string"
                                                        },
                                                        "flac": {
                                                            "type": "string"
                                                        },
                                                        "mp3_very_low": {
                                                            "type": "string"
                                                        },
                                                        "mp3_low": {
                                                            "type": "string"
                                                        },
                                                        "mp3_medium": {
                                                            "type": "string"
                                                        },
                                                        "mp3_high": {
                                                            "type": "string"
                                                        },
                                                        "mp3_very_high": {
                                                            "type": "string"
                                                        },
                                                        "mp3_alexa": {
                                                            "type": "string"
                                                        },
                                                        "mp3_alexa_48br": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "loudnessPresets": {
                                                    "type": "object",
                                                    "properties": {
                                                        "spotify": {
                                                            "type": "string"
                                                        },
                                                        "podcast": {
                                                            "type": "string"
                                                        },
                                                        "applePodcast": {
                                                            "type": "string"
                                                        },
                                                        "youtube": {
                                                            "type": "string"
                                                        },
                                                        "lowVol": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {
                                            "presets": {
                                                "mp3": "mp3 format 320k (320 CBR)",
                                                "wav": "wav format at 48 kHz sample rate and 16 bits per sample",
                                                "ogg": "ogg format at 320k",
                                                "flac": "flac format at 48 kHz sample rate and 16 bits per sample",
                                                "mp3_very_low": "mp3 lowest quality (~64 kbps VBR)",
                                                "mp3_low": "mp3 low quality (~115 kbps VBR)",
                                                "mp3_medium": "mp3 medium quality (~165 kbps VBR)",
                                                "mp3_high": "mp3 high quality (~190 kbps VBR)",
                                                "mp3_very_high": "mp3 very high quality (~245 kbps VBR)",
                                                "mp3_alexa": "mp3 format mono at 48kHz sample rate",
                                                "mp3_alexa_48br": "mp3 format mono at 48 bit rate and 24kHz sample rate"
                                            },
                                            "loudnessPresets": {
                                                "spotify": "-16 LUFS Loudness Integrated and -2 dB True Peak",
                                                "podcast": "-16 LUFS Loudness Integrated and -3 dB True Peak",
                                                "applePodcast": "-16 LUFS Loudness Integrated and -1 dB True Peak",
                                                "youtube": "-14 LUFS Loudness Integrated and -1 dB True Peak",
                                                "lowVol": "-20 LUFS Loudness Integrated and -5 dB True Peak"
                                            }
                                        },
                                        "meta": {
                                            "version": "2.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Valid presets listed below",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Missing authentication token. There might be no such route or method."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/speech/predict": {
            "description": "Predicts the resultant length of a given voice alias",
            "post": {
                "tags": [
                    "Predict"
                ],
                "operationId": "postPredict",
                "summary": "Predicts the resultant audio length of the given text content read by the supplied voice alias",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "voice": {
                                        "type": "string",
                                        "description": "Name of the voice"
                                    },
                                    "text": {
                                        "type": "string",
                                        "description": "Text that will be read"
                                    }
                                },
                                "required": [
                                    "voice",
                                    "text"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "voice predicted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "length": {
                                                    "type": "number"
                                                },
                                                "r2": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "number"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {
                                            "length": 3.118831041074268,
                                            "r2": 0.9730056021652634
                                        },
                                        "meta": {
                                            "version": "1.0.1",
                                            "requestId": "******************",
                                            "creditsUsed": 0.0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "prediction calculated",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Unable to predict with this voice",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "number"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "errors": [
                                            "Unable to find a profile for the selected alias"
                                        ],
                                        "meta": {
                                            "version": "1.0.1",
                                            "requestId": "******************",
                                            "creditsUsed": 0.0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "prediction cannot be calculated",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Access denied. Could not find a valid organization."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/speech/predict/voices": {
            "get": {
                "tags": [
                    "Predict"
                ],
                "operationId": "listPredictVoices",
                "summary": "Lists all voices that can be predict resultant audio length",
                "responses": {
                    "200": {
                        "description": "Script created/updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "voices": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "version": {
                                                    "type": "string"
                                                },
                                                "requestId": {
                                                    "type": "string"
                                                },
                                                "creditsUsed": {
                                                    "type": "integer"
                                                },
                                                "creditsRemaining": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "warnings": {
                                            "type": "array"
                                        }
                                    },
                                    "example": {
                                        "data": {
                                            "voices": [
                                                "hailey",
                                                "conversational_marcus",
                                                "narration_kai",
                                                "carmen",
                                                "andres",
                                                "kiara",
                                                "promo_joe",
                                                "rodrigo",
                                                "yves",
                                                "carlos",
                                                "alden",
                                                "hannah",
                                                "nanami",
                                                "prabhat",
                                                "sardor",
                                                "abeo",
                                                "elena",
                                                "conversational_wade",
                                                "raymond",
                                                "ardi",
                                                "fatima",
                                                "tomas",
                                                "joanna",
                                                "mario",
                                                "birgit",
                                                "frederic",
                                                "ahmet",
                                                "shelly",
                                                "cosmo",
                                                "muriel",
                                                "lyra",
                                                "marlon",
                                                "reynold",
                                                "margot",
                                                "narration_donna",
                                                "joaquin",
                                                "allison",
                                                "ismael",
                                                "renata",
                                                "olivia",
                                                "asilia",
                                                "renee",
                                                "grey",
                                                "elizabeth",
                                                "fergus",
                                                "narration_cameron",
                                                "moaz",
                                                "leia",
                                                "petra",
                                                "adam",
                                                "conrad",
                                                "hamed",
                                                "alain",
                                                "conversational_greg",
                                                "ahmed",
                                                "promo_charlie",
                                                "promo_bella",
                                                "rafiki",
                                                "adele",
                                                "santiago",
                                                "emily",
                                                "jacqueline",
                                                "swara",
                                                "yolanda",
                                                "henry",
                                                "aiden",
                                                "selma",
                                                "dimas",
                                                "beth",
                                                "anneli",
                                                "terron",
                                                "cora",
                                                "sonia",
                                                "polina",
                                                "killian",
                                                "sofia",
                                                "hedi",
                                                "osman",
                                                "verena",
                                                "ronny",
                                                "elke",
                                                "jorge",
                                                "bashkar",
                                                "promo_zach",
                                                "ryan",
                                                "rana",
                                                "thay",
                                                "monica",
                                                "hiugaai",
                                                "athina",
                                                "bruce",
                                                "ruben",
                                                "almir",
                                                "alba",
                                                "emi",
                                                "promo_selene",
                                                "cynthia",
                                                "chava",
                                                "marisa",
                                                "mohan",
                                                "wu",
                                                "gabriel",
                                                "dalia",
                                                "narration_greg",
                                                "promo_ramona",
                                                "elliot",
                                                "juan-martin",
                                                "promo_steve",
                                                "isabela",
                                                "catia",
                                                "claude",
                                                "belkys",
                                                "emil",
                                                "alvaro",
                                                "domenic",
                                                "graham",
                                                "daulet",
                                                "marta",
                                                "juan-gabriel",
                                                "ciarra",
                                                "quincy",
                                                "xiaobei",
                                                "imelda",
                                                "promo_eric",
                                                "svetlana",
                                                "laith",
                                                "luna",
                                                "brandon",
                                                "hamdan",
                                                "jonas",
                                                "narration_tobin",
                                                "anthony",
                                                "pippa",
                                                "ji-min",
                                                "elsa",
                                                "tamas",
                                                "kasper",
                                                "vicki",
                                                "camila",
                                                "caitlin",
                                                "klaus",
                                                "asad",
                                                "everita",
                                                "priyanka",
                                                "dena",
                                                "cataldo",
                                                "jona",
                                                "clara",
                                                "jeff",
                                                "lupe",
                                                "vicky",
                                                "andy",
                                                "sylvie",
                                                "anu",
                                                "prashant",
                                                "liberto",
                                                "mirna",
                                                "yvette",
                                                "aaron",
                                                "katja",
                                                "eusebio",
                                                "maja",
                                                "calimero",
                                                "mariana",
                                                "emel",
                                                "narration_paige",
                                                "ariane",
                                                "narration_chase",
                                                "paloma",
                                                "ivey",
                                                "gonzalo",
                                                "narration_sofia",
                                                "narration_jeremy",
                                                "kelso",
                                                "fiamma",
                                                "uzma",
                                                "nikolina",
                                                "susanna",
                                                "georgia",
                                                "ashley",
                                                "bella",
                                                "catalina",
                                                "gul",
                                                "denise",
                                                "martyna",
                                                "paulo",
                                                "ava",
                                                "sara",
                                                "gianni",
                                                "luis",
                                                "tina",
                                                "jerome",
                                                "toni",
                                                "emilio",
                                                "verona",
                                                "narration_terra",
                                                "james",
                                                "nicolas",
                                                "narration_vanessa",
                                                "nestoras",
                                                "bertie",
                                                "bong-jin",
                                                "bryer",
                                                "conversational_patrick",
                                                "edgard",
                                                "valeria",
                                                "ali",
                                                "amina",
                                                "besnik",
                                                "promo_lee",
                                                "conversational_alan",
                                                "molly",
                                                "leonas",
                                                "marek",
                                                "lena",
                                                "dan",
                                                "albert",
                                                "antonin",
                                                "roberto",
                                                "antonio",
                                                "yan",
                                                "viktoria",
                                                "jessica",
                                                "zach",
                                                "wayne",
                                                "promo_paul",
                                                "narration_ali",
                                                "victor",
                                                "mateo",
                                                "coco",
                                                "colette",
                                                "charlie",
                                                "maisie",
                                                "diego",
                                                "leah",
                                                "moses",
                                                "narration_ben",
                                                "dmitry",
                                                "narration_gia",
                                                "avri",
                                                "sobhana",
                                                "matthias",
                                                "fernanda",
                                                "jamal",
                                                "ahme",
                                                "neerja",
                                                "alina",
                                                "kiel",
                                                "victoria",
                                                "gabriela",
                                                "jose-pascual",
                                                "charline",
                                                "kate",
                                                "luiz",
                                                "lisa",
                                                "taim",
                                                "nikola",
                                                "amanda",
                                                "brenda",
                                                "anxhela",
                                                "adriana",
                                                "ramona",
                                                "mattias",
                                                "arnaud",
                                                "narration_diarmid",
                                                "alex",
                                                "midhun",
                                                "fady",
                                                "tanja",
                                                "christel",
                                                "noemi",
                                                "candice",
                                                "maarten",
                                                "charlotte",
                                                "shakir",
                                                "ayanda",
                                                "savannah",
                                                "libby",
                                                "yasmin",
                                                "gabrijela",
                                                "zara",
                                                "stefan",
                                                "reem",
                                                "vitoria",
                                                "nathan",
                                                "elshan",
                                                "louisa",
                                                "celeste",
                                                "nils",
                                                "finn",
                                                "conversational_antony",
                                                "alfie",
                                                "gisela",
                                                "ingrid",
                                                "conversational_alana",
                                                "luke",
                                                "christopher",
                                                "narration_wade",
                                                "penelope",
                                                "vlasta",
                                                "connor",
                                                "suman",
                                                "gene",
                                                "sasha",
                                                "guy",
                                                "ethan",
                                                "raquel",
                                                "hsiaochen",
                                                "josh",
                                                "tanishaa",
                                                "miguel",
                                                "saleh",
                                                "adri",
                                                "marine",
                                                "joel",
                                                "kert",
                                                "promo_greg",
                                                "bernd",
                                                "inessa",
                                                "dolores",
                                                "harper",
                                                "aparecida",
                                                "anya",
                                                "hoaimy",
                                                "francesca",
                                                "ana",
                                                "elijah",
                                                "lidia",
                                                "promo_jodi",
                                                "heber",
                                                "belen",
                                                "ubax",
                                                "lorenzo",
                                                "achara",
                                                "ralf",
                                                "aigu",
                                                "mhairi",
                                                "hudson",
                                                "bikram",
                                                "donald",
                                                "promo_wade",
                                                "salome",
                                                "dylan",
                                                "narration_fiona",
                                                "dieter",
                                                "maura",
                                                "benigno",
                                                "lisandro",
                                                "daichi",
                                                "namminh",
                                                "tony",
                                                "xiaochen",
                                                "willem",
                                                "narration_joe",
                                                "salma",
                                                "latifa",
                                                "coralie",
                                                "palmira",
                                                "hiumaan",
                                                "liam",
                                                "gadis",
                                                "beni",
                                                "zoe",
                                                "bianca",
                                                "azra",
                                                "luana",
                                                "conversational_bella",
                                                "maurice",
                                                "oliver",
                                                "shruti",
                                                "madhur",
                                                "haroon",
                                                "colin",
                                                "zaina",
                                                "sebastian",
                                                "jeppe",
                                                "narration_michael",
                                                "agnieszka",
                                                "jack",
                                                "enric",
                                                "omar",
                                                "corey",
                                                "delilah",
                                                "liliana",
                                                "amber",
                                                "mason",
                                                "laura",
                                                "hillevi",
                                                "narration_abbi",
                                                "aysel",
                                                "wilbur",
                                                "dariya",
                                                "leni",
                                                "srecko",
                                                "valentina",
                                                "gerard",
                                                "wren",
                                                "andrea",
                                                "ezinne",
                                                "myra",
                                                "karla",
                                                "yunjhe",
                                                "hila",
                                                "roger",
                                                "noah",
                                                "blake",
                                                "kalina",
                                                "isabella",
                                                "salman",
                                                "marcus",
                                                "geena",
                                                "myriam",
                                                "rok",
                                                "promo_ava",
                                                "klarissa",
                                                "conversational_ava",
                                                "alonso",
                                                "amal",
                                                "lucinda",
                                                "narration_paula",
                                                "hunter",
                                                "niwat",
                                                "estrella",
                                                "nancy",
                                                "elora",
                                                "antoine",
                                                "noura",
                                                "zariyah",
                                                "duarte",
                                                "saumya",
                                                "pallavi",
                                                "ostap",
                                                "siti",
                                                "aspen",
                                                "aria",
                                                "sienna",
                                                "berna",
                                                "promo_tilda",
                                                "madina",
                                                "amelia",
                                                "iselin",
                                                "christabel",
                                                "elvira",
                                                "dhananjay",
                                                "harri",
                                                "conversational_kai",
                                                "derek",
                                                "francisca",
                                                "isla",
                                                "beatriz",
                                                "erika",
                                                "sloane",
                                                "jenny",
                                                "hollie",
                                                "fenna",
                                                "fahed",
                                                "michael",
                                                "jazmin",
                                                "hugh",
                                                "narek",
                                                "jollie",
                                                "henri",
                                                "andrew",
                                                "cicely",
                                                "kirsi",
                                                "zofia",
                                                "rosa",
                                                "ona",
                                                "narration_tristan",
                                                "narration_oliver",
                                                "promo_sofia",
                                                "barnaby",
                                                "bran",
                                                "bassel",
                                                "sofie",
                                                "chandler",
                                                "mercedes",
                                                "amala",
                                                "mouna",
                                                "lolita",
                                                "zuri",
                                                "sarahi",
                                                "paola",
                                                "irma",
                                                "guadalupe",
                                                "natasha",
                                                "diana",
                                                "horacio",
                                                "gudrun",
                                                "lukas",
                                                "baozhai",
                                                "gerald",
                                                "borislav",
                                                "tadeu",
                                                "bronson",
                                                "yoselin",
                                                "isaac",
                                                "michelle",
                                                "pauline"
                                            ]
                                        },
                                        "meta": {
                                            "version": "3.0.0",
                                            "requestId": "******************",
                                            "creditsUsed": 0,
                                            "creditsRemaining": 0.0
                                        },
                                        "message": "Requested text-to-speech files listed below",
                                        "warnings": []
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Could not find a valid api key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Missing authentication token. There might be no such route or method."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "ApiKeyAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "x-api-key"
            }
        }
    },
    "security": [
        {
            "ApiKeyAuth": []
        }
    ]
}